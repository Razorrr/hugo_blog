<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>(*´･д･)?</title>
    <link>http://xrazor.org/</link>
    <description>Recent content on (*´･д･)?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Oct 2017 18:03:49 +0800</lastBuildDate>
    
	<atom:link href="http://xrazor.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo&#43;nginx&#43;webhook:在服务器上搭建个人博客并实现自动发布</title>
      <link>http://xrazor.org/post/hugo&#43;nginx&#43;webhook%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</link>
      <pubDate>Wed, 04 Oct 2017 18:03:49 +0800</pubDate>
      
      <guid>http://xrazor.org/post/hugo&#43;nginx&#43;webhook%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83/</guid>
      <description>hugo是个静态网页生成系统，生成速度很快，占空间小，适合用来搭建个人博客。废话少说，直接进入正题。
本次实践主要实现３个目标：
1.学会用hugo生成页面;
2.用nginx作代理，并将hugo部署到服务器上;
3.使用github的webhook实现本地到线上的自动发布.
在本地安装并使用hugo 安装 本地使用的系统为ArchLinux，安装较为方便，直接使用命令行安装：
sudo pacman -S hugo
生成新网站 安装好后,　比如“blog”，然后：
hugo new site blog
这样就会在打开终端的地方生成一个名为&amp;rdquo;blog&amp;rdquo;的文件夹，里面是网站的目录文件。
生成新文章 在新生成&amp;rdquo;blog”的目录下输入命令：
hugo new post/&amp;lt;你想写的新文章的标题&amp;gt;.md
这样就会在blog/content/post/目录下生成一个md文件，这就是你的新文章了，通常是用markdown格式写的。
安装主题 众所周知，这种东西肯定少不了主题，而这个主题存放的地方是在网站根目录下的themes文件夹，从官网上或者在github其他地方找到你钟意的主题，然后在themes文件夹下使用git命令下载：
git clone &amp;lt;git地址名称&amp;gt;.git　&amp;lt;你自己安的一个名字&amp;gt;
这样在themes文件夹下就会生成一个文件夹，文件夹的名字是在命令中你取的，文件夹的内容是从git上下载下来的主题内容。然后在网站根目录下有一个config.toml文件，这是hugo的配置文件，将里面的theme字段改成你要使用的主题文件夹的名称。比如你想要用的主题你给它命名为“ivy”，那么在config.toml中则改为：
theme = &#39;ivy&#39;
这样就ok了。其他配置项的用法可自行google之。
生成静态网页 编辑好文章后，要使用hugo生成静态网页，方法也简单得没天理，就是在网站根目录（比如在本例中为‘blog’文件夹）下使用命令：
hugo
这样就会在根目录下生成一个public文件夹，这里面就是根据你的内容包括主题生成的静态网页，此时你可以把这个文件夹丢到GithubPages或CodingPages上，或者是扔到服务器上（后文详解），就算是内网发布了。
将hugo部署在服务器上 因为hugo生成的是静态网页，所以说是部署，实际上就是把前文提到的public文件夹扔到服务器上，然后让外网能访问到就ok了。
域名与解析 首先买一个域名；其次，将域名解析到你的服务器（也就是说输入这个域名等同于输入了你服务器的ip），这里推荐DNSPOD,免费且好用，具体过程这里就不细表了。
下载nginx 一般服务器上默认没有安装，得手动安装，也很简单：
sudo pacman -S nginx
配置nginx 通过以下命令查找nginx的配置文件所在位置: nginx -t
找到路径下的nginx.conf后，我们要对其作一些简单的修改，注意看我注释的部分：
user root;　# 原本的用户是nginx而不是root worker_processes auto; error_log /var/log/nginx/error.log; pid /run/nginx.pid; # Load dynamic modules.</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>http://xrazor.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://xrazor.org/about/</guid>
      <description> 工学学士，管理学学士，工商管理硕士； ２年工人，2年秘书，１年创业，1年数据挖掘； 划了１５年水后卫；11年不认真的民谣，5年蜻蜓点水的摄影； 还想再看看更大的世界。  </description>
    </item>
    
  </channel>
</rss>