<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>机器学习 on (*´･д･)?</title>
    <link>http://xrazor.org/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 机器学习 on (*´･д･)?</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Jul 2017 16:40:10 +0800</lastBuildDate>
    
	<atom:link href="http://xrazor.org/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何评价模型的好坏</title>
      <link>http://xrazor.org/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%A5%BD%E5%9D%8F/</link>
      <pubDate>Sun, 23 Jul 2017 16:40:10 +0800</pubDate>
      
      <guid>http://xrazor.org/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%A5%BD%E5%9D%8F/</guid>
      <description>这个问题可以分解为3个子问题：首先，评估模型时具体评估的是什么？其次，评估方法和过程是怎样的？最后，评估指标该如何选择？ 下面将针对这三个子问</description>
    </item>
    
    <item>
      <title>梯度下降法总结</title>
      <link>http://xrazor.org/post/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 20 May 2017 16:18:12 +0800</pubDate>
      
      <guid>http://xrazor.org/post/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95%E6%80%BB%E7%BB%93/</guid>
      <description>传统的按照每次迭代取的样本数来分 Batch Gradient Descent 全量梯度下降 每次都取整个训练集的样本来更新。 缺点:计算慢，不能在线更新模型。 Stochastic gradient descent 随机梯度下降 每次只取</description>
    </item>
    
    <item>
      <title>机器学习的几个规定动作</title>
      <link>http://xrazor.org/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%87%A0%E4%B8%AA%E8%A7%84%E5%AE%9A%E5%8A%A8%E4%BD%9C/</link>
      <pubDate>Mon, 20 Mar 2017 00:05:02 +0800</pubDate>
      
      <guid>http://xrazor.org/post/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%87%A0%E4%B8%AA%E8%A7%84%E5%AE%9A%E5%8A%A8%E4%BD%9C/</guid>
      <description>我们拿到一个机器学习项目之后，通常都会经过以下几个步骤： 1. Insight 数据洞察 统计机器学习一般是从已知数据集中训练模型，并用模型对未知数据进行预测。因</description>
    </item>
    
    <item>
      <title>10分钟训练一个神经网络</title>
      <link>http://xrazor.org/post/10%E5%88%86%E9%92%9F%E8%AE%AD%E7%BB%83%E4%B8%80%E4%B8%AA%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sat, 18 Feb 2017 21:17:20 +0800</pubDate>
      
      <guid>http://xrazor.org/post/10%E5%88%86%E9%92%9F%E8%AE%AD%E7%BB%83%E4%B8%80%E4%B8%AA%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/</guid>
      <description>准备 OS:Archlinux 语言:Python2 框架:Keras(非GPU) IDE:Ipython 数据集:MNIST 开始 默认以上环境已经齐备，下面直接开始。 Step 1:把包导进来 import matplotlib.pyplot as plt #</description>
    </item>
    
    <item>
      <title>Word2vec简单实践</title>
      <link>http://xrazor.org/post/word2vec%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Thu, 12 Jan 2017 23:57:26 +0800</pubDate>
      
      <guid>http://xrazor.org/post/word2vec%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5/</guid>
      <description>word2vec 简介 word2vec是google的一个开源工具，能够根据输入的词的集合计算出词与词之间的距离。 它将term转换成向量形式，可以把对文本内</description>
    </item>
    
    <item>
      <title>信息熵、信息增益和Gini指数</title>
      <link>http://xrazor.org/post/%E4%BF%A1%E6%81%AF%E7%86%B5%E4%BF%A1%E6%81%AF%E5%A2%9E%E7%9B%8A%E5%92%8Cgini%E6%8C%87%E6%95%B0/</link>
      <pubDate>Mon, 21 Nov 2016 23:21:28 +0800</pubDate>
      
      <guid>http://xrazor.org/post/%E4%BF%A1%E6%81%AF%E7%86%B5%E4%BF%A1%E6%81%AF%E5%A2%9E%E7%9B%8A%E5%92%8Cgini%E6%8C%87%E6%95%B0/</guid>
      <description>在机器学习决策树中，引入里熵、信息增益、信息增益比和Gini指数，作为特征选择的准则。不同的算法对应了不同的特征选择准则，如ID3选用信息增</description>
    </item>
    
  </channel>
</rss>